name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Чекаут кода
      - name: Checkout code
        uses: actions/checkout@v4

      # Настройка Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Логин в GitHub Container Registry
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # Сборка и пуш образа
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ secrets.REPO_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NUXT_UI_PRO_LICENSE=${{ secrets.NUXT_UI_PRO_LICENSE }}
        env:
          NUXT_UI_PRO_LICENSE: ${{ secrets.NUXT_UI_PRO_LICENSE }}

      # Деплой на VPS
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            echo "Docker login status: $?"
            echo "NUXT_EMAIL_USER=${{ secrets.NUXT_EMAIL_USER }}" > ${{ secrets.TITLE }}.env
            echo "NUXT_EMAIL_PASS=${{ secrets.NUXT_EMAIL_PASS }}" >> ${{ secrets.TITLE }}.env
            echo "NUXT_EMAIL_HOST=${{ secrets.NUXT_EMAIL_HOST }}" >> ${{ secrets.TITLE }}.env
            echo "NUXT_EMAIL_PORT=${{ secrets.NUXT_EMAIL_PORT }}" >> ${{ secrets.TITLE }}.env
            echo "NUXT_EMAIL_TO=${{ secrets.NUXT_EMAIL_TO }}" >> ${{ secrets.TITLE }}.env
            docker pull ghcr.io/${{ secrets.REPO_NAME }}:latest
            docker stop ${{ secrets.TITLE }} || true
            docker rm ${{ secrets.TITLE }} || true
            docker run -d --name ${{ secrets.TITLE }} --network projects_apps --env-file ${{ secrets.TITLE }}.env ghcr.io/${{ secrets.REPO_NAME }}:latest